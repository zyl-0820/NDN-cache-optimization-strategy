
#include "include/std_headers.p4_14"

parser start {
    return parse_ethernet;
}

parser parse_ethernet {
    extract(ethernet);
    return select(latest.etherType) {
        ETHERTYPE_IPV4 : parse_ipv4;
        ETHERTYPE_ARP  : parse_arp;
        default: ingress;
    }
}

parser parse_ipv4 {
    extract(ipv4);
    return ingress;
}

parser parse_arp {
    extract(arp);
    return ingress;
}

header_type routing_metadata_t {
    fields {
        nhgroup : 32;
    }
}

metadata routing_metadata_t routing_metadata;

action set_nhop(nhgroup) {
    modify_field(routing_metadata.nhgroup, nhgroup);
}

action _drop() {
    drop();
}

action _nop() {
}

table ipv4_lpm {
    reads {
        ipv4.dstAddr : lpm;
    }
    actions {
        set_nhop;
        _drop;
    }
    size: 1024;
}

action forward(dmac_val, smac_val, port) {
    modify_field(ethernet.dstAddr, dmac_val);
    modify_field(standard_metadata.egress_port, port);
    modify_field(ethernet.srcAddr, smac_val);
    subtract_from_field(ipv4.ttl, 1);
}

table nexthops {
    reads {
        routing_metadata.nhgroup : exact;
    }
    actions {
        forward;
        _drop;
    }
    size: 512;
}

table macfwd {
    reads {
        ethernet.dstAddr : exact;
    }
    actions {
        _nop;
        _drop;
    }
    size: 256;
}

control ingress {
   apply(macfwd) {
      hit {
           apply(ipv4_lpm);
           apply(nexthops);
      }
   }
}

control egress {
}
